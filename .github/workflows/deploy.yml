name: Deploy to Azure

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set admin credentials from GitHub Secrets
        env:
          ADMIN_USERNAME: ${{ secrets.VM_ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.VM_ADMIN_PASSWORD }}
        run: |
          echo "ADMIN_USERNAME=$ADMIN_USERNAME" >> $GITHUB_ENV
          echo "ADMIN_PASSWORD=$ADMIN_PASSWORD" >> $GITHUB_ENV

      - name: Deploy Infrastructure (Bicep)
        run: |
          az deployment group create \
            --resource-group windows_vm_rg \
            --template-file ./bicep/main.bicep \
            --parameters adminUsername='${{ secrets.VM_ADMIN_USERNAME }}' adminPassword='${{ secrets.VM_ADMIN_PASSWORD }}'

      - name: Fetch VM public IPs and credentials
        env:
          RG_NAME: ${{ secrets.AZURE_RG_NAME }}
          KV_NAME: ${{ secrets.AZURE_KV_NAME }}
        run: |
          echo "Fetching IPs and credentials..."
          echo "IIS_VM_IP=$(az network public-ip show --resource-group $RG_NAME --name iis-vm-pip --query ipAddress -o tsv)" >> $GITHUB_ENV
          echo "NGINX_VM_IP=$(az network public-ip show --resource-group $RG_NAME --name nginx-vm-pip --query ipAddress -o tsv)" >> $GITHUB_ENV
          echo "ADMIN_USERNAME=$(az keyvault secret show --vault-name $KV_NAME --name vmAdminUsername --query value -o tsv)" >> $GITHUB_ENV
          echo "ADMIN_PASSWORD=$(az keyvault secret show --vault-name $KV_NAME --name vmAdminPassword --query value -o tsv)" >> $GITHUB_ENV

      - name: Debug env vars
        run: |
          echo "IIS_VM_IP=$IIS_VM_IP"
          echo "NGINX_VM_IP=$NGINX_VM_IP"
          echo "ADMIN_USERNAME=$ADMIN_USERNAME"
          echo "ADMIN_PASSWORD=$ADMIN_PASSWORD"

      - name: Create Ansible inventory
        run: |
          echo "[iis]" > ./ansible/inventory.ini
          echo "$IIS_VM_IP ansible_user=$ADMIN_USERNAME ansible_password=$ADMIN_PASSWORD ansible_connection=winrm ansible_winrm_server_cert_validation=ignore" >> ./ansible/inventory.ini
          echo "" >> ./ansible/inventory.ini
          echo "[nginx]" >> ./ansible/inventory.ini
          echo "$NGINX_VM_IP ansible_user=$ADMIN_USERNAME ansible_password=$ADMIN_PASSWORD ansible_connection=winrm ansible_winrm_server_cert_validation=ignore" >> ./ansible/inventory.ini

      - name: Show generated inventory
        run: cat ./ansible/inventory.ini

      - name: Install Ansible and pywinrm
        run: |
          python3 -m pip install --upgrade pip
          pip install ansible pywinrm

      - name: Run Ansible playbook manually
        run: |
          ansible-playbook ./ansible/site.yml -i ./ansible/inventory.ini


